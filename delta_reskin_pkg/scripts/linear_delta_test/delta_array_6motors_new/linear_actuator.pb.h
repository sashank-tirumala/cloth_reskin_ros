/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_LINEAR_ACTUATOR_PB_H_INCLUDED
#define PB_LINEAR_ACTUATOR_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _lin_actuator { 
    int32_t id; 
    pb_size_t joint_pos_count;
    float joint_pos[12]; /* repeated float joint_pos = 2; */
} lin_actuator;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define lin_actuator_init_default                {0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define lin_actuator_init_zero                   {0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}

/* Field tags (for use in manual encoding/decoding) */
#define lin_actuator_id_tag                      1
#define lin_actuator_joint_pos_tag               2

/* Struct field encoding specification for nanopb */
#define lin_actuator_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    id,                1) \
X(a, STATIC,   REPEATED, FLOAT,    joint_pos,         2)
#define lin_actuator_CALLBACK NULL
#define lin_actuator_DEFAULT NULL

extern const pb_msgdesc_t lin_actuator_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define lin_actuator_fields &lin_actuator_msg

/* Maximum encoded size of messages (where known) */
#define lin_actuator_size                        71

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
